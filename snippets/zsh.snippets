# #!/bin/zsh
snippet #!
	#!/bin/zsh

snippet i
	if [[ -${1:} ]] ; then
		${0:${VISUAL}}
	fi


snippet if
	if [[ -${1:} ]] ; then
		${0:${VISUAL}}
	fi

snippet ife
	if [[ -${1:} ]] ; then
		${2:${VISUAL}}
	else
		${0:# statements}
	fi

snippet eif
	elif ${1:condition}; then
		${0:${VISUAL}}

snippet for
	for (( ${2:i} = 0; $2 < ${1:count}; $2++ )); do
		${0:${VISUAL}}
	done

snippet fori
	for ${1:needle} in ${2:haystack}; do
		${0:${VISUAL}}
	done
snippet fore
	for ${1:item} in ${2:list}; do
		${0:${VISUAL}}
	done
snippet wh
	while ${1:condition}; do
		${0:${VISUAL}}
	done
snippet until
	until ${1:condition}; do
		${0:${VISUAL}}
	done
snippet repeat
	repeat ${1:integer}; do
		${0:${VISUAL}}
	done
snippet case
	case ${1:word} in
		${2:pattern})
			${0};;
	esac
snippet select
	select ${1:answer} in ${2:choices}; do
		${0:${VISUAL}}
	done
snippet (
	( ${0:#statements} )
snippet {
	{ ${0:#statements} }
snippet [
	[[ ${0:test} ]]
snippet always
	{ ${1:try} } always { ${0:always} }

snippet f
	${1:function_name}() {
		${0:# function_body}
	}

snippet fun
	${1:function_name}() {
		${0:# function_body}
	}
snippet ffun
	function ${1:function_name}() {
		${0:# function_body}
	}

snippet \split
	# split sufix
	local suffix=("${(s,.,)1}")
	suffix=${suffix[-1]}


snippet \spl
	# split sufix
	local suffix=("${(s,.,)1}")
	suffix=${suffix[-1]}

snippet \s
	# split sufix
	local suffix=("${(s,.,)1}")
	suffix=${suffix[-1]}

